cmake_minimum_required(VERSION 3.0)

project(Eldritch)

option(PANDORA "Set to ON if targeting an OpenPandora device" ${PANDORA})
option(GLES "Set to ON if using GLES2 instead of desktop OpenGL" ${GLES})
option(DEBUG_ENABLED "Build a DEBUG version (if not, then it's a RELEASE version)" ${DEBUG_ENABLED})
option(FINAL_ENABLED "Build a FINAL version" ${FINAL_ENABLED})

option(WITH_SDL2 "Use SDL2 as the sound backend" ${WITH_SDL2})
option(WITH_SDL "Use SDL as the sound backend" ${WITH_SDL})
option(WITH_PORTAUDIO "Use PORTAUDIO as the sound backend" ${WITH_PORTAUDIO})
option(WITH_OPENAL "Use OPENAL as the sound backend" ${WITH_OPENAL})
option(WITH_XAUDIO2 "Use XAUDIO2 as the sound backend" ${WITH_XAUDIO2})
option(WITH_WINMM "Use WINMM as the sound backend" ${WITH_WINMM})
option(WITH_WASAPI "Use WASAPI as the sound backend" ${WITH_WASAPI})
option(WITH_OSS "Use OSS as the sound backend" ${WITH_OSS})
option(WITH_SDL_STATIC "Use SDL_STATIC as the sound backend" ${WITH_SDL_STATIC})
option(WITH_SDL2_STATIC "Use SDL2_STATIC as the sound backend" ${WITH_SDL2_STATIC})
option(WITH_ALSA "Use ALSA as the sound backend" ${WITH_ALSA})
option(WITH_OPENSLES "Use OPENSLES as the sound backend" ${WITH_OPENSLES})
option(WITH_NULL "Use NULL as the sound backend (disable sound)" ${WITH_NULL})
option(WITH_COREAUDIO "Use COREAUDIO as the sound backend" ${WITH_COREAUDIO})

if(PANDORA)
	add_definitions(-DPANDORA)
endif()
if(GLES)
	add_definitions(-DHAVE_GLES)
endif()
if(DEBUG_ENABLED)
	add_definitions(-D_DEBUG)
endif()
if(FINAL_ENABLED)
	add_definitions(-D_FINAL)
endif()

if(WITH_SDL2)
	add_definitions(-DWITH_SDL2)
endif()
if(WITH_SDL)
	add_definitions(-DWITH_SDL)
endif()
if(WITH_PORTAUDIO)
	add_definitions(-DWITH_PORTAUDIO)
endif()
if(WITH_OPENAL)
	add_definitions(-DWITH_OPENAL)
endif()
if(WITH_XAUDIO2)
	add_definitions(-DWITH_XAUDIO2)
endif()
if(WITH_WINMM)
	add_definitions(-DWITH_WINMM)
endif()
if(WITH_WASAPI)
	add_definitions(-DWITH_WASAPI)
endif()
if(WITH_OSS)
	add_definitions(-DWITH_OSS)
endif()
if(WITH_SDL_STATIC)
	add_definitions(-DWITH_SDL_STATIC)
endif()
if(WITH_SDL2_STATIC)
	add_definitions(-DWITH_SDL2_STATIC)
endif()
if(WITH_ALSA)
	add_definitions(-DWITH_ALSA)
endif()
if(WITH_OPENSLES)
	add_definitions(-DWITH_OPENSLES)
endif()
if(WITH_NULL)
	add_definitions(-DWITH_NULL)
endif()
if(WITH_COREAUDIO)
	add_definitions(-DWITH_COREAUDIO)
endif()

add_subdirectory(Libraries/Core/)
add_subdirectory(Libraries/Math/)
add_subdirectory(Libraries/3D/)
if(NOT GLES)
	add_subdirectory(Libraries/GLEW/)
endif()
add_subdirectory(Libraries/Audio/)
add_subdirectory(Libraries/SoLoud/)
add_subdirectory(Libraries/Workbench/)
add_subdirectory(Libraries/Rodin/)
add_subdirectory(Libraries/UI/)
add_subdirectory(Libraries/Framework/)
add_subdirectory(Libraries/zlib/)
add_subdirectory(Projects/Eld/)
add_subdirectory(Tools/Checksum/)
add_subdirectory(Tools/ConfigCompiler/)
add_subdirectory(Tools/FilePacker/)
add_subdirectory(Tools/MeshCompiler/)
